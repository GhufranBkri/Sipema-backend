// schema.prisma
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // Used for migrations
}

enum Roles {
  TENAGA_KEPENDIDIKAN
  MAHASISWA
  DOSEN
  ADMIN
  PETUGAS_SUPER
  PETUGAS_WBS
  KEPALA_WBS
  PETUGAS
  KEPALA_PETUGAS_UNIT
}


enum TypePengaduan {
  USER
  MASYARAKAT
}

enum Status {
  PENDING
  PROCESS
  REJECTED
  COMPLETED
}

enum NotificationType {
  NEW_REPORT
  REPORT_UPDATED
  REPORT_IN_PROCESS
  REMINDER
}

model Notification {
  id                   String           @id @default(cuid())
  userId               String
  title                String
  message              String
  isRead               Boolean          @default(false)
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  type                 NotificationType
  user                 User             @relation(fields: [userId], references: [no_identitas])
  
  pengaduanId          String?
  pengaduan            Pengaduan?       @relation(fields: [pengaduanId], references: [id])

  
  pengaduanWBSId       String?
  pengaduanWBS         PengaduanWBS?    @relation(fields: [pengaduanWBSId], references: [id])
}

model User {
  id            String      @id @default(cuid())
  email         String
  no_identitas  String      @unique
  name          String
  password      String
  program_studi String?
  no_telphone   String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  pengaduan     Pengaduan[] 
  pengaduanWBS  PengaduanWBS[] @relation("pelapor")
  notifications Notification[] 
  unit_petugas  Unit?     @relation("petugas", fields: [unitId], references: [id])
  unitId        String?
  unit_kepala   Unit?     @relation("kepalaUnit")
  userLevelId   String
  userLevel     UserLevels @relation(fields: [userLevelId], references: [id])
}

model UserLevels {
  id         String       @id
  name       String       @unique
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  users      User[]
  acl        Acl[]

}

model Features {
  id        String   @id
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  actions Actions[]
  acl     Acl[]
}

model Actions {
  id          String   @id
  name        String
  namaFeature String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  feature Features @relation(fields: [namaFeature], references: [name])
  @@unique([namaFeature, name])
}

model Acl {
  id          String   @id
  namaFeature String
  namaAction  String
  userLevelId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  feature   Features   @relation(fields: [namaFeature], references: [name])
  userLevel UserLevels @relation(fields: [userLevelId], references: [id])

  @@unique([namaFeature, namaAction, userLevelId])
}

model Unit {
  id                  String                @id @default(cuid())
  nama_unit           String                @unique
  pengaduan           Pengaduan[]
  petugas             User[]                @relation("petugas")
  kepalaUnit          User                  @relation("kepalaUnit", fields: [kepalaUnitId], references: [no_identitas])
  kepalaUnitId        String                @unique
}

model Kategori {
  id                  String                @id @default(cuid())
  nama                String
  pengaduan           Pengaduan[]
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  pengaduanWBS   PengaduanWBS[]
  isWBS               Boolean               @default(false)
}

model PengaduanWBS {
  id             String       @id  @default(cuid())
  judul          String
  deskripsi      String
  pihakTerlibat  String
  tanggalKejadian DateTime
  lokasi         String
  kategoriId     String 
  unit           String
  kategori       Kategori  @relation(fields: [kategoriId], references: [id])
  pelaporId      String
  pelapor        User      @relation("pelapor", fields: [pelaporId], references: [no_identitas])
  status         Status     @default(PENDING)
  notfications   Notification[]
  approvedBy     String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  response       String?
  filePendukung String?
  filePetugas   String?
}



model Pengaduan {
  id            String   @id @default(cuid())
  judul         String
  deskripsi     String
  status        Status   @default(PENDING)
  unit          Unit     @relation(fields: [unitId], references: [id])
  pelaporId    String?
  pelapor      User?     @relation(fields: [pelaporId], references: [no_identitas])
  unitId      String
  response      String?
  kategori      Kategori @relation(fields: [kategoriId], references: [id])
  kategoriId    String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  nama          String?
  filePendukung String?
  notfications  Notification[]
  approvedBy    String?
  tipePengaduan TypePengaduan
  no_telphone   String?
  filePetugas   String?
  harapan_pelapor String?
}
