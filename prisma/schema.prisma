generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Notification {
  id             String           @id @default(cuid())
  message        String
  isRead         Boolean          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  type           NotificationType
  userId         String
  pengaduanId    String?
  title          String
  pengaduanWBSId String?
  pengaduan      Pengaduan?       @relation(fields: [pengaduanId], references: [id])
  pengaduanWBS   PengaduanWBS?    @relation(fields: [pengaduanWBSId], references: [id])
  user           User             @relation(fields: [userId], references: [no_identitas])
}


model User {
  id            String         @id @default(cuid())
  email         String
  no_identitas  String         @unique
  name          String
  password      String
  program_studi String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  unitId        String?
  no_telphone   String?
  userLevelId   String
  notifications Notification[]
  pengaduan     Pengaduan[]
  pengaduanWBS  PengaduanWBS[] @relation("pelapor")
  unit_kepala   Unit?          @relation("kepalaUnit")
  unit_pimpinan Unit?          @relation("pimpinanUnit")
  unit_petugas  Unit?          @relation("petugas", fields: [unitId], references: [id])
  userLevel     UserLevels     @relation(fields: [userLevelId], references: [id])
}

model UserLevels {
  id        String   @id
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  acl       Acl[]
  users     User[]
}

model Features {
  id        String    @id
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  acl       Acl[]
  actions   Actions[]
}

model Actions {
  id          String   @id
  name        String
  namaFeature String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  feature     Features @relation(fields: [namaFeature], references: [name])

  @@unique([namaFeature, name])
}

model Acl {
  id          String     @id
  namaFeature String
  namaAction  String
  userLevelId String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  feature     Features   @relation(fields: [namaFeature], references: [name])
  userLevel   UserLevels @relation(fields: [userLevelId], references: [id])

  @@unique([namaFeature, namaAction, userLevelId])
}

model Unit {
  id           String      @id @default(cuid())
  nama_unit    String      @unique
  jenis_unit  jenisUnit
  kepalaUnitId String      @unique
  pimpinanUnitId String @unique
  pengaduan    Pengaduan[]
  kepalaUnit   User        @relation("kepalaUnit", fields: [kepalaUnitId], references: [no_identitas])
  petugas      User[]      @relation("petugas")
  pimpinanUnit User       @relation("pimpinanUnit", fields: [pimpinanUnitId], references: [no_identitas])
}

model Kategori {
  id           String         @id @default(cuid())
  nama         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  isWBS        Boolean        @default(false)
  pengaduan    Pengaduan[]
  pengaduanWBS PengaduanWBS[]
}

model PengaduanWBS {
  id              String         @id @default(cuid())
  judul           String
  deskripsi       String
  pihakTerlibat   String
  tanggalKejadian DateTime
  lokasi          String
  kategoriId      String
  unit            String
  pelaporId       String
  status          Status         @default(PENDING)
  approvedBy      String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  response        String?
  filePendukung   String?
  filePetugas     String?
  notfications    Notification[]
  kategori        Kategori       @relation(fields: [kategoriId], references: [id])
  pelapor         User           @relation("pelapor", fields: [pelaporId], references: [no_identitas])
}

model Pengaduan {
  id              String         @id @default(cuid())
  judul           String
  deskripsi       String
  kategoriId      String
  pelaporId       String?
  status          Status         @default(PENDING)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  NIK            String?
  filePendukung   String?
  response        String?
  filePetugas     String?
  harapan_pelapor String?
  approvedBy      String?
  nama            String?
  no_telphone     String?
  tipePengaduan   TypePengaduan
  unitId          String
  notfications    Notification[]
  kategori        Kategori       @relation(fields: [kategoriId], references: [id])
  pelapor         User?          @relation(fields: [pelaporId], references: [no_identitas])
  unit            Unit           @relation(fields: [unitId], references: [id])
}


enum TypePengaduan {
  USER
  MASYARAKAT
}

enum Status {
  PENDING
  PROCESS
  REJECTED
  COMPLETED
}

enum jenisUnit {
  FAKULTAS
  UPT
  DIREKTORAT
  LEMBAGA
}

enum NotificationType {
  NEW_REPORT
  REPORT_UPDATED
  REPORT_IN_PROCESS
  REMINDER
}
